name: Android Build and Test

on:
  push:
    branches:
      - 'feature/github_actions'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MALLOC_ARENA_MAX: 2
      ADB_INSTALL_TIMEOUT: 10
      TARGET_VERSION: 30
      ANDROID_BUILD_TOOLS_VERSION: 30.0.2
      ANDROID_HOME: /usr/local/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download and set up Android SDK
        run: |
          sudo mkdir -p $ANDROID_HOME/cmdline-tools
          sudo chown $USER $ANDROID_HOME -R
          wget "https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip" -O commandlinetools.zip
          unzip commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "platforms;android-${{ env.TARGET_VERSION }}" "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}" "platform-tools"
          yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "system-images;android-21;default;armeabi-v7a"

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --licenses --sdk_root=$ANDROID_HOME

      - name: Prepare Gradle
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create Android AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/bin/avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a" -f
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
          adb wait-for-device
          adb shell input keyevent 82

      - name: Run tests
        env:
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
        run: ./gradlew clean connectedCheck

      - name: Send notifications
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.your-email-provider.com
          server_port: 465
          username: sdk_developers@cloudinary.com
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Build notification
          body: "Build completed for ${{ github.repository }}"
          to: sdk_developers@cloudinary.com
          from: sdk_developers@cloudinary.com