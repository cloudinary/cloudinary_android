name: Android Build and Test

on:
  push:
    branches:
      - 'feature/github_actions'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TARGET_VERSION: 30
      ANDROID_BUILD_TOOLS_VERSION: 30.0.2
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Download and Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME
          wget "https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip" -O commandlinetools.zip
          unzip -q commandlinetools.zip -d $ANDROID_HOME/
          yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager "platforms;android-${TARGET_VERSION}" --sdk_root=$ANDROID_HOME
          yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" --sdk_root=$ANDROID_HOME

      - name: Accept Android Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install SDK components
        run: |
            echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-31" "system-images;android-31;google_apis;x86_64"

      - name: Create AVD
        run: echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n testRunner -d 19 -k "system-images;android-31;google_apis;x86_64"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Set Cloudinary URL
        run: |
            bash tools/get_test_cloud.sh > cloudinary_url.txt
            echo "CLOUDINARY_URL=$(cat cloudinary_url.txt)" >> $GITHUB_ENV

      - name: Use Cloudinary URL in Further Steps
        run: echo $CLOUDINARY_URL

      - name: Build and Test
        run: ./gradlew clean connectedCheck
