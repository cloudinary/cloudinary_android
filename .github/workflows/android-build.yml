name: Android Build and Test

on:
  push:
    branches:
      - 'feature/github_actions'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Install SDK Command Line Tools
        run: |
          sudo mkdir -p $ANDROID_HOME/cmdline-tools
          wget "https://dl.google.com/android/repository/commandlinetools-linux-8210871_latest.zip" -O commandlinetools.zip
          unzip commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-${TARGET_VERSION}"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-21;default;armeabi-v7a"

      - name: Create AVD
        run: |
          echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a" --force

      - name: Start emulator
        run: |
          emulator -avd test -no-audio -no-window &
          android-wait-for-emulator

      - name: Run tests
        run: ./gradlew clean connectedCheck

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
