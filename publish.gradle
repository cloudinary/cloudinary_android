apply plugin: 'maven-publish'
apply plugin: 'signing'

// === Configure Android publishing (sources/javadoc jars) ===
android {
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

def getReleaseComponent() {
    return components.findByName("release")
}

// === Publishing Configuration ===
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from getReleaseComponent()

                groupId = publishGroupId
                artifactId = publishArtifactId
                version = publishVersion

                pom {
                    name = publishArtifactName
                    description = publishDescription
                    url = githubUrl
                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = scmConnection
                        developerConnection = scmDeveloperConnection
                        url = scmUrl
                    }
                }
            }
        }

        repositories {
            maven {
                name = "Sonatype"
                url = uri("https://s01.oss.sonatype.org/content/repositories/releases/")
                credentials {
                    username = System.getenv("OSSRH_USERNAME")
                    password = System.getenv("OSSRH_PASSWORD")
                }
            }
        }
    }

    signing {
        signing {
            def base64Key = System.getenv("SIGNING_KEY") ?: project.findProperty("signing.key")
            def password = System.getenv("SIGNING_PASSWORD") ?: project.findProperty("signing.password")

            if (!base64Key) throw new GradleException("SIGNING_KEY is missing or null.")
            if (!password) throw new GradleException("SIGNING_PASSWORD is missing or null.")

            def decodedKey = new String(Base64.decoder.decode(base64Key as String), "UTF-8")

            if (!decodedKey.startsWith("-----BEGIN PGP PRIVATE KEY BLOCK-----")) {
                throw new GradleException("SIGNING_KEY does not decode into a valid key block.")
            }

            try {
                useInMemoryPgpKeys(decodedKey, password)
            } catch (MissingMethodException e) {
                throw new GradleException("`useInMemoryPgpKeys()` not found. Is the signing plugin applied?")
            }

            sign publishing.publications.release
        }
    }
}
