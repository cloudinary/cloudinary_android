apply plugin: 'maven-publish'

// Simple module-level publishing for manual upload to Central Portal
if (hasProperty("ossrhTokenPassword") || hasProperty("centralPassword")) {

    // Use afterEvaluate to ensure Android components are available
    afterEvaluate {
        publishing {
            publications {
                mavenAar(MavenPublication) {
                    // Set correct coordinates
                    groupId = group
                    artifactId = publishArtifactId
                    version = version
                    
                    // Include the AAR artifact and components properly for Android
                    from components.release

                    pom.withXml {
                        def root = asNode()
                        
                        // Add name element properly
                        def nameNode = root.appendNode('name')
                        nameNode.setValue(publishArtifactName)
                        
                        // Add description
                        def descNode = root.appendNode('description')
                        descNode.setValue(publishDescription)
                        
                        // Add URL
                        def urlNode = root.appendNode('url')
                        urlNode.setValue(githubUrl)
                        
                        // Add licenses
                        def licensesNode = root.appendNode('licenses')
                        def licenseNode = licensesNode.appendNode('license')
                        licenseNode.appendNode('name', 'MIT License')
                        licenseNode.appendNode('url', 'https://opensource.org/licenses/MIT')
                        
                        // Add developers
                        def developersNode = root.appendNode('developers')
                        def developerNode = developersNode.appendNode('developer')
                        developerNode.appendNode('id', 'cloudinary')
                        developerNode.appendNode('name', 'Cloudinary')
                        developerNode.appendNode('email', 'info@cloudinary.com')
                        
                        // Add SCM
                        def scmNode = root.appendNode('scm')
                        scmNode.appendNode('connection', scmConnection)
                        scmNode.appendNode('developerConnection', scmDeveloperConnection)
                        scmNode.appendNode('url', githubUrl)
                    }
                }
            }
        }
    }
    
    // Ensure Android generates sources and javadoc JARs
    android {
        publishing {
            singleVariant('release') {
                withSourcesJar()
                withJavadocJar()
            }
        }
    }
}